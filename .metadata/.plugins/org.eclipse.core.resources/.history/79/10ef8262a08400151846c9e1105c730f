import java.util.*;
import java.io.*;

public class getVertexCover {
	static String USAGE = "Usage:";

	public static void main(String[] args) throws IOException {
		
		//check input correct
		if(args.length != 5){
			System.out.println("Input Error");
			System.out.println(USAGE);
			System.exit(1);
		}
		String inFileName = args[0];
		String outFileName = args[1];
		String algPick = args[2];
		
		if(!algPick.equalsIgnoreCase("bb") && !algPick.equalsIgnoreCase("local") && !algPick.equalsIgnoreCase("approx")){
			System.out.println("Algorithm not recognized");
			System.out.println(USAGE);
			System.exit(1);
		}
		
		PrintWriter output = new PrintWriter(outFileName, "UTF-8");
		
		//input file parse
		Graph G = parseInput(inFileName);
		
		
		
		output.close();
	}
	
	public static Graph parseInput(String inFileName) throws IOException {
		BufferedReader fcont = new BufferedReader(new FileReader(inFileName));
		
		String[] firstLine = fcont.readLine().split(" ");
		Graph G = new Graph(Integer.parseInt(firstLine[0]), Integer.parseInt(firstLine[1]));
		
		int edgeCnt = Integer.parseInt(firstLine[1]);
		int lineCnt = 0;
		String[] curLine;
		while((curLine = fcont.readLine().split(" "))!=null){
			lineCnt++;
			
			//add edges
			for(int i=0; i<curLine.length; i++){
				G.addEdge(lineCnt, Integer.parseInt(curLine[i]));
				edgeCnt++;
			}
		}
		
		if(edgeCnt != G.numEdges){
			System.out.println("Only "+edgeCnt+" edges detected! Updating");
			G.numEdges = edgeCnt;
		}
		
		fcont.close();
		return G;
	}

}
